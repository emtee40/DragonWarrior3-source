ЧТО МОЖНО ИЗМЕНИТЬ

1. Изменить логику управления на более современную. Меню должно использоваться только для настроек, просмотра и надевания шмоток и статусов. Действия на карте должны происходить автоматически. В идеале с автоопределением точки проверки (кнопка А в пустом месте или на сундуке начинает поиск под ногами, перед персонажем или магазином начинает разговор, перед дверью открывает ее, если есть соответствующий предмет в инвентаре) либо вручную (А - разговор, В - поиск без проверки положения).

ЧТО СДЕЛАТЬ

1 Шорткат в СРАМе на исполнение библиотечных функций имеет проверку на индекс 66 и 67, которые находятся во втором блоке индексов (больше 256). Переместить его к остальным шорткатам в кучу и избавиться от дополнительных проверок.
1.1 В идеале убрать шорткаты из СРАМы и вставить их простыми кейзовыми вызовами непосредственно в системный банк, причем должно хватить даже относительных бранчей (3А*4 = Е8)
2. Дочистить 16-битные оффсеты в данных.
3. Добавить в файловую систему функции из старших банков, освободив BRK опкод только для выполнения системных и библиотечных функций.
4. Финальная чистка таблиц указателей в банках от пустых и больше не используемых
5. Совместить номера банков и индексы файлов в 16-битные записи. Достаточно добавить параметр в макрос PTR_IDX.
6. Финальная оптимизация таблиц файловой системы, если сделан п.5
6.1. При оптимизации файловой системы может возникнуть проблема, когда индексы файлов переходят из старшей таблицы в младшую, но так как макросы переходов это считают автоматически, ничего страшного для них не произойдет. Проблема может возникнуть только если такой индекс будет указывать на блок данных, так как текущие функции чтения из внешних банков читают только по умолчанию индексы младшей таблицы. Это не проблема, если все файлы данных поместить в самое начало, чтобы они гарантировано были в младшей таблице.
7. BRK вызовы делятся на три группы: выборка по индексу файловой системы, прямой вызов для функций в банках 16-1Е (так как основная файловая система не поддерживала банки больше F, но теперь поддерживает), и вызов системной функции с индексами от 02 до 12 с передачей ей параметра вторым аргументом (укороченный вызов, используется в основном для вывода текстов и меню). Причем для двух последних используется один и тот же BRK код, но индексы находятся в непересекающихся диапазонах: индекс функции не может быть больше 13, а старший банк прямого перехода не может быть меньше 14 (что проверяется). Это костыль для того, чтобы расширить объем памяти до 512 без потери совместимости со всем предыдущим кодом. В настоящий момент уже не сильно актуален, прямые вызовы могут быть убраны и все библиотечные функции использовать полный диапазон индексов, соответственно убрать лишние проверки из функции обработки BRK.
8. Упростить систему вывборки и вывода сообщений. Используются системные функции двух типов. Одни напрямую вызываются из банка D, куда и возвращаются для выбора индекса сообщений по отдельной таблице. Другие используют системные функции, определяющими старшую часть индекса сообщения и аргументом, задающим младшую. В результате получается довольно странная каша из разного рода индексов, вместо указания одного конкретного индекса конкретного сообщения. До кучи сами функции вывода сообщений довольно разветвлены и вложены друг в друга в разной степени.

ЧТО СДЕЛАНО

1. Общая очистка кода и неиспользуемых данных, как обычно.
2. Музыкальный банк перемещен в нижний блок памяти, убраны дальние вложенные вызовы звуковых библиотек через костыли. Теперь вызовы делаются напрямую с одним переходом.
3. БОльшая часть 16-битных офсетов сконвертирована из 16-битных WORD в данных программы в непосредственную загрузку в регистры старшей и младшей части непосредственного оффсета.
4. Чтение офсетов из внешних банков через файловую систему вымарано за ненадобностью. Везде, где требуется, грузится непосредственный оффсет без перехода в заданный банк, так как они видны на этапе ассемблирования, соответственно вымараны все функции для этого, ставшие ненужными.
5. Файловая система проиндексирована, включая индексы указателей и индексы элементов файловой системы.
5.1 Все функции, использующие файловую систему для чтения данных внешних банков, автоматически рассчитывают индекс файла, перемещаемые.
5.2 Все макросы дальних вызовов автоматически определяют, в какой таблице индексов находится заданная функция.
5.3 Заменены все дальние вызовы в файловой системе на мнемонические макросы.
6. Шорткаты в СРАМе переделаны на более простые, параметрическое чтение индекса вымарано за ненадобностью вместе с функцией.
7. Шорткат в СРАМе на исполнение библиотечных функций по заданному индексу перенесен из СРАМ в системный банк и упрощен
7.1 Все таблицы индексов для этого шортката в коде заменены константами, перемещаемые.

НОВЫЕ БАГИ

